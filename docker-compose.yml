services:
    
    mysql:
        #container_name: mysql
        image: mariadb:10.6.4-focal
        #image: mysql:5.7
        restart: always
        ports: 
            - "3308:3306"
        command: --default-authentication-plugin=mysql_native_password  --explicit_defaults_for_timestamp=1
        #command: --default-authentication-plugin=caching_sha2_password
        environment:
            MYSQL_DATABASE: opencart
            MYSQL_PASSWORD: test
            MYSQL_ROOT_PASSWORD: test
            #MYSQL_USER: root
        volumes:
            - ./mysql/init-wordpress.sql:/docker-entrypoint-initdb.d/init-wordpress.sql
            - ./mysql/init-prestashop.sql:/docker-entrypoint-initdb.d/init-prestashop.sql
            - ./mysql/init-opencart.sql:/docker-entrypoint-initdb.d/init-opencart.sql
            - ./mysql/init-joomla.sql:/docker-entrypoint-initdb.d/init-joomla.sql
            - ./mysql/init-magento.sql:/docker-entrypoint-initdb.d/init-magento.sql
            #- ./conf:/etc/mysql/conf.d
            - persistent:/var/lib/mysql
        networks:
            - local-network
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ptest"]
            interval: 10s
            timeout: 5s
            retries: 10
    local:
        build: .
        container_name: local
        restart: always
        ports: 
            - "86:80"
        volumes:
            - ./www:/var/www/html
            #- ./config:/usr/local/etc/php
            - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
        environment:
            XDEBUG_CLIENT_HOST: 172.17.0.1
            XDEBUG_CLIENT_PORT: 9004
            PHP_IDE_CONFIG: serverName=local-server
        links:
            - mysql
        networks:
            - local-network
    
    wordpress:
        container_name: wordpress
        image: wordpress:latest
        restart: unless-stopped
        depends_on:
            - mysql
        #ports:
            #- 8083:80
        environment:
            WORDPRESS_DB_HOST: mysql
            WORDPRESS_DB_NAME: wordpress
            WORDPRESS_DB_USER: root
            WORDPRESS_DB_PASSWORD: test
            # 🌐 Configuración para ngrok
            WORDPRESS_HOME: "${WP_HOME:-http://localhost:8083}"
            WORDPRESS_SITEURL: "${WP_SITEURL:-http://localhost:8083}"
            # Configuraciones adicionales
            WORDPRESS_DEBUG: 1
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_DEBUG', true);
                define('WP_DEBUG_LOG', true);
                define('WP_DEBUG_DISPLAY', false);
                define('FS_METHOD', 'direct');
        networks:
            - local-network
        volumes:
            - ./www/wordpress:/var/www/html
            - ./config/php.ini:/usr/local/etc/php/conf.d/php.ini
    
    joomla:
        container_name: joomla
        image: joomla:5.4.0
        restart: unless-stopped
        depends_on:
            - mysql
        #ports:
            #- 8084:80
        environment:
            JOOMLA_DB_HOST: mysql
            JOOMLA_DB_NAME: joomla
            JOOMLA_DB_USER: root
            JOOMLA_DB_PASSWORD: test
        networks:
            - local-network
        volumes:
            - ./www/joomla:/var/www/html

    prestashop:
        container_name: prestashop
        image: prestashop/prestashop:8.2.3
        restart: unless-stopped
        depends_on:
            - mysql
        #ports:
            #- 8082:80
        environment:
            DB_SERVER: mysql
            DB_NAME: prestashop
            DB_USER: root
            DB_PASSWD: test
            PS_FOLDER_ADMIN: admin4577
            PS_FOLDER_INSTALL: install4577
            PS_INSTALL_AUTO: 1        # ⚡ Instalación automática
            PS_DEV_MODE: 1            # ⚡ Habilita modo desarrollador
            PS_LANGUAGE: es           # Idioma por defecto
            PS_COUNTRY: CO            # País por defecto
            PS_TIMEZONE: America/Bogota
            PS_CURRENCY: COP              # Moneda predeterminada (Peso Colombiano)
            ADMIN_MAIL: admin@epayco.com  # 🔑 Usuario admin del Back Office
            ADMIN_PASSWD: admin123        # 🔑 Contraseña admin
            # 🌐 Configuración para ngrok
            #PS_DOMAIN: "localhost:8082"
            #PS_SHOP_DOMAIN: "localhost:8082"
            #PS_SHOP_DOMAIN_SSL: "localhost:8082"
            #PS_SSL_ENABLED: 0
            PS_DOMAIN: "${PS_DOMAIN:-localhost:8082}"
            PS_SHOP_DOMAIN: "${PS_SHOP_DOMAIN:-localhost:8082}"
            PS_SHOP_DOMAIN_SSL: "${PS_SHOP_DOMAIN_SSL:-localhost:8082}"
            PS_SSL_ENABLED: "${PS_SSL_ENABLED:-0}"
            PS_SSL_ENABLED_EVERYWHERE: "${PS_SSL_ENABLED_EVERYWHERE:-0}"
        networks:
        - local-network
        volumes:
        - ./www/prestashop/modules:/var/www/html/modules
        - ./www/prestashop/themes/myTheme:/var/www/html/themes/myTheme
        - psdata:/var/www/html
        - ./config/app.ini:/usr/local/etc/php/conf.d/app.ini

    opencart:
        container_name: opencart
        #image: bitnami/opencart:4
        #: opencart/opencart:4.0.2.3
        image: php:8.1-apache
        #build: .
        restart: unless-stopped
        depends_on:
            - mysql
        ports:
            - 80:80
        environment:
            XDEBUG_CLIENT_HOST: 172.17.0.1
            XDEBUG_CLIENT_PORT: 9004
            PHP_IDE_CONFIG: serverName=local-server
        networks:
            - local-network
        volumes:
            - ./www/opencart:/var/www/html/opencart
            #- ./config:/usr/local/etc/php
            - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
            - ./config/opencart.ini:/usr/local/etc/php/conf.d/opencart.ini
        command: >
            bash -c "
            apt-get update &&
            apt-get install -y libzip-dev zip unzip curl libfreetype6-dev libjpeg62-turbo-dev libpng-dev &&
            docker-php-ext-configure gd --with-freetype --with-jpeg &&
            docker-php-ext-install mysqli pdo pdo_mysql zip gd &&
            a2enmod rewrite &&
            chown -R www-data:www-data /var/www/html &&
            chmod -R 755 /var/www/html &&
            apache2-foreground
            "
    
    magento:
        build:
            context: .
            dockerfile: DockerfileMagento
            args:
                MAGENTO_PUBLIC_KEY: ${MAGENTO_PUBLIC_KEY}
                MAGENTO_PRIVATE_KEY: ${MAGENTO_PRIVATE_KEY}
                XDEBUG_CLIENT_HOST: ${XDEBUG_CLIENT_HOST}
                XDEBUG_CLIENT_PORT: ${XDEBUG_CLIENT_PORT}
        container_name: magento
        env_file:
            - ./docker/api.env
        ports:
            - "${PORT_LOCAL}:80"
        volumes:
            - ./www/magento:/var/www/html
            - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
        environment:
            MAGENTO_PUBLIC_KEY: ${MAGENTO_PUBLIC_KEY}
            MAGENTO_PRIVATE_KEY: ${MAGENTO_PRIVATE_KEY}
            XDEBUG_CLIENT_HOST: ${XDEBUG_CLIENT_HOST}
            XDEBUG_CLIENT_PORT: ${XDEBUG_CLIENT_PORT}
            PHP_IDE_CONFIG: serverName=www-server
        depends_on:
            mysql:
                condition: service_healthy
            opensearch:
                condition: service_healthy
        networks:
        - local-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        links:
            - mysql:mysql
        ports:
            - 8089:80
        restart: always
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: mysql
            MYSQL_USER: root
            MYSQL_PASSWORD: test
            MYSQL_ROOT_PASSWORD: test
        depends_on:
            - mysql
        networks:
            - local-network

    opensearch:
        image: opensearchproject/opensearch:2.2.1
        container_name: opensearch
        hostname: opensearch
        environment:
            - discovery.type=single-node
            - plugins.security.disabled=true
            - cluster.name=magento-opensearch-cluster
            - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g -XX:+IgnoreUnrecognizedVMOptions -XX:-UseContainerSupport"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
        networks:
            - local-network
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
            interval: 10s
            timeout: 10s
            retries: 30


    ngrok:
        image: ngrok/ngrok:latest
        container_name: ngrok
        restart: always
        depends_on:
           - magento
        environment:
            # Set NGROK_AUTHTOKEN in your shell or in a .env file
            NGROK_AUTHTOKEN: "${NGROK_AUTHTOKEN:-}"
        command: ["http", "magento:80"]
        ports:
            - "4040:4040" # ngrok web UI
        networks:
            - local-network

volumes:
    psdata:
    persistent: {}

networks:
    local-network:
